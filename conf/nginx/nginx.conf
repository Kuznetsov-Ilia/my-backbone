# nginx Configuration File
# http://wiki.nginx.org/Configuration

# Run as a less privileged user for security reasons.
#user www www;

# How many worker threads to run;
# "auto" sets it to the number of CPU cores available in the system, and
# offers the best performance. Don't set it higher than the number of CPU
# cores if changing this parameter.

# The maximum number of connections for Nginx is calculated by:
# max_clients = worker_processes * worker_connections
worker_processes 1;

# Maximum open file descriptors per process;
# should be > worker_connections.
#worker_rlimit_nofile 8192;


events {
  # When you need > 8000 * cpu_cores connections, you start optimizing your OS,
  # and this is probably the point at which you hire people who are smarter than
  # you, as this is *a lot* of requests.
  worker_connections 1024;
}

# Default error log file
# (this is only used when you don't override error_log on a server{} level)
error_log  logs/error.log warn;
#pid        /var/run/nginx.pid;

http {

  # Hide nginx version information.
  server_tokens off;

  # Define the MIME types for files.
  include       mime.types;
  default_type  application/octet-stream;

  # Update charset_types due to updated mime.types
  charset_types text/xml text/plain text/vnd.wap.wml application/x-javascript application/rss+xml text/css application/javascript application/json;

  # Format to use in log files
  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

  # Default log file
  # (this is only used when you don't override access_log on a server{} level)
  access_log logs/access.log main;

  # How long to allow each connection to stay idle; longer values are better
  # for each individual client, particularly for SSL, but means that worker
  # connections are tied up longer. (Default: 65)
  keepalive_timeout 20;


  # Tell Nginx not to send out partial frames; this increases throughput
  # since TCP frames are filled up before being sent out. (adds TCP_CORK)
  tcp_nopush      on;


  # Compression
  # Enable Gzip compressed.
  gzip on;

  gzip_http_version  1.1;
  
  # Compression level (1-9).
  # 5 is a perfect compromise between size and cpu usage, offering about
  # 75% reduction for most ascii files (almost identical to level 9).
  gzip_comp_level    5;

  # Don't compress anything that's already small and unlikely to shrink much
  # if at all (the default is 20 bytes, which is bad as that usually leads to
  # larger files after gzipping).
  gzip_min_length    256;

  # Compress data even for clients that are connecting to us via proxies,
  # identified by the "Via" header (required for CloudFront).
  gzip_proxied       any;

  # Tell proxies to cache both the gzipped and regular version of a resource
  # whenever the client's Accept-Encoding capabilities header varies;
  # Avoids the issue where a non-gzip capable client (which is extremely rare
  # today) would display gibberish if their proxy gave them the gzipped version.
  gzip_vary          on;

  # Compress all output labeled with one of the following MIME-types.
  gzip_types
    application/atom+xml
    application/javascript
    application/json
    application/rss+xml
    application/vnd.ms-fontobject
    application/x-font-ttf
    application/x-web-app-manifest+json
    application/xhtml+xml
    application/xml
    font/opentype
    image/svg+xml
    image/x-icon
    text/css
    text/plain
    text/x-component;
  # text/html is always compressed by HttpGzipModule


  # This should be turned on if you are going to have pre-compressed copies (.gz) of
  # static files available. If not it should be left off as it will cause extra I/O
  # for the check. It is best if you enable this in a location{} block for
  # a specific directory, or on an individual server{} level.
  #gzip_static on;
  gzip_disable  "msie6";


  resolver 8.8.8.8;
  lua_package_path ";;/opt/openresty/share/lua/5.1/?.lua;;/opt/openresty/share/lua/5.1/?/init.lua;/var/www/backend/?.lua;";
  lua_package_cpath ";;/opt/openresty/lib/lua/5.1/?.so;";
  # 10 MB page cache
  lua_shared_dict page_cache 10m;
  # 1 MB session cache
  lua_shared_dict session_cache 1m;
  # Load the luajit resty core 
  init_by_lua 'require "resty.core"';
  server {
    listen 80 deferred; # for Linux
    listen [::]:80;
    access_log off;
    autoindex off;
    expires max;
    client_max_body_size 1m;
    error_page 404 /404;
    error_page 500 502 503 504 /50x;
    index index.html;
    default_type 'text/html';
    charset utf-8;
    include app.conf;
    include server.conf;
    #include images.conf;
    include static.conf;
  }
  server {
    server_name www.hopbox.ru;
    rewrite ^ http://hopbox.ru$request_uri permanent;
  }
  # Drop requests for unknown hosts
  #
  # If no default server is defined, nginx will use the first found server.
  # To prevent host header attacks, or other potential problems when an unknown 
  # servername is used in a request, it's recommended to drop the request 
  # returning 444 "no response".

  server {
    listen 80 default_server;
    return 444;
  }
}
